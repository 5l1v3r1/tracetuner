#!/usr/local/gnu/bin/perl -w

#  get_default_lut.perl $Revision: 1.2 $

# This Perl program generates C-code for implementing a default table.
# The input is an ASCII file generated by get_lut.perl

use strict;

#vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
print( 
'/**    Copyright (c) 1999 Paracel Inc.  All rights reserved.
 ** 
 **    Btk_default_table.c 
 ** 
 **    $ Revision:  $ 
 **/  

#include "Btk_lookup_table.h"

' );
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

INPUT_FILE:
while(1) {			# loop on input files
    
    my(@tok);			# array of tokens
    
    # gobble up header
    while(<>) {
	chomp;
	@tok = split;
	if( scalar(@tok)>1 && $tok[1] eq 'Parameter' ) { last; }
    }
    
    #vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
print( '
static TraceParamEntry DefaultParamWhichEntries[] = {
/*   phr3_t            phr7_t             psr_t              pres_t  */
' );
    #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    # reformat parameter thresholds for C-code
    my($first) = 1;
    while(<>) {
	chomp;
	@tok = split;
	if( scalar(@tok)>1 && $tok[1] eq 'Quality' ) { last; }
	if( scalar(@tok)==4 ) {
	    if( $first ) {  $first = 0;  } 
	    else         {  print(",\n");  }
	    print("{$tok[0], $tok[1], $tok[2], $tok[3]}");	
	}
    }

    #vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
print( '};

static BtkLookupEntry DefaultTableWhichEntries[] = {
/* qv ind1 ind2 ind3 ind4 */
' );
    #^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    # reformat qv, parameter threshold indices, and tag indices for C-code
    $first = 1;
    while(<>) {
	chomp;
	@tok = split;
	if( $tok[0] eq "#" ) { 
	    print_declarations(); 
	    next INPUT_FILE; 
	}
	if( scalar(@tok)==6 ) {
	    if( $first ) {  $first = 0;  } 
	    else         {	print(",\n");  }
	    #        qv        par1      par2      par3      par4      tag
	   print("{$tok[0],\t$tok[1],\t$tok[2],\t$tok[3],\t$tok[4],\t$tok[5]}");
	}
    }
    print_declarations();
    last;

} # INPUT_FILE


#
# print static table declaration and function declaration
#
sub print_declarations {
#vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
print( '};

static BtkLookupTable DefaultTableWhich = { 
    sizeof(DefaultParamWhichEntries)/ sizeof(DefaultParamWhichEntries[0]),
    DefaultParamWhichEntries, 
    sizeof(DefaultTableWhichEntries)/ sizeof(DefaultTableWhichEntries[0]),
    DefaultTableWhichEntries 
};

BtkLookupTable *  
Btk_get_Which_table(void) 
{ 
    return &DefaultTableWhich; 
}
' );
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}
